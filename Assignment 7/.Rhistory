load("PentathlonTargeting.Rdata")
load("PentathlonTargeting.Rdata")
pent <- pent %>% mutate(age=factor(age), female=factor(female), buyer=factor(buyer))
library(gmodels)
library(modelr)
library(janitor)
library(haven)
library(readxl)
library(knitr)
library(psych)
library(statar)
library(tidyverse)
load("PentathlonTargeting.Rdata")
pent <- pent %>% mutate(age=factor(age), female=factor(female), buyer=factor(buyer))
View(pent)
load("PentathlonTargeting.Rdata")
pent <- pent %>% mutate(age=factor(age), female=factor(female), buyer=factor(buyer))
#Now we create the training and testing split
pent.training<- pent%>% filter(training==1)
pent.testing<- pent%>% filter(training==0)
# First  we create a logistic regression model for every type of offer ( endurance, backcountry, etc)
lr.backcountry <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="backcountry"))
load("PentathlonTargeting.Rdata")
pent <- pent %>% mutate(age=factor(age), female=factor(female), buyer=factor(buyer))
#Now we create the training and testing split
pent.train<- pent%>% filter(training==1)
pent.test<- pent%>% filter(training==0)
# First  we create a logistic regression model for every type of offer ( endurance, backcountry, etc)
lr.backcountry <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="backcountry"))
pent.test <- pent.test %>%
mutate(pr.backcountry = predict(lr.backcountry, newdata=bbb.nptb.test, type="response"))
# First  we create a logistic regression model for every type of offer ( endurance, backcountry, etc)
lr.backcountry <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="backcountry"))
pent.test <- pent.test %>%
mutate(pr.backcountry = predict(lr.backcountry, newdata=pent.test, type="response"))
knitr::opts_chunk$set(echo=TRUE,      # Print all the code in all the chunks
warning=FALSE,  # Don't print warning statements
message=FALSE,  # Don't print other R output messages
comment=NA)     # Helps produce prettier output
library(gmodels)
library(modelr)
library(janitor)
library(haven)
library(readxl)
library(knitr)
library(psych)
library(statar)
library(tidyverse)
load("PentathlonTargeting.Rdata")
pent <- pent %>% mutate(age=factor(age), female=factor(female), buyer=factor(buyer))
#Now we create the training and testing split
pent.train<- pent%>% filter(training==1)
pent.test<- pent%>% filter(training==0)
# First  we create a logistic regression model for every type of offer ( endurance, backcountry, etc)
lr.backcountry <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="backcountry"))
pent.test <- pent.test %>%
mutate(pr.backcountry = predict(lr.backcountry, newdata=pent.test, type="response"))
# Endurance
lr.endurance <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="endurance"))
pent.test <- pent.test %>%
mutate(pr.endurance = predict(lr.endurance, newdata=pent.test, type="response"))
# Strength
lr.strength <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="strength"))
pent.test <- pent.test %>%
mutate(pr.endurance = predict(lr.strength, newdata=pent.test, type="response"))
#Water
lr.water <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="water"))
pent.test <- pent.test %>%
mutate(pr.water = predict(lr.water, newdata=pent.test, type="response"))
#Team
lr.team <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="team"))
pent.test <- pent.test %>%
mutate(pr.team = predict(lr.team, newdata=pent.test, type="response"))
#Winter
lr.winter <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="winter"))
pent.test <- pent.test %>%
mutate(pr.winter = predict(lr.winter, newdata=pent.test, type="response"))
#Winter
lr.racquet <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="racquet"))
pent.test <- pent.test %>%
mutate(pr.racquet = predict(lr.caquet, newdata=pent.test, type="response"))
#Winter
lr.racquet <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="racquet"))
pent.test <- pent.test %>%
mutate(pr.racquet = predict(lr.racquet, newdata=pent.test, type="response"))
pent.test<pent.test %>%
mutate(pr.max=pmax(pr.backcountry, pr.endurance, pr.water, pr.team, pr.winter, pr.racquet),
mail.offer=case_when(
pr.backcountry==pr.max,
pr.endurance==pr.max,
pr.water==pr.max,
pr.team==pr.max,
pr.winter==pr.max,
pr.racquet==pr.max
))
pent.test<pent.test %>%
mutate(pr.max=pmax(pr.backcountry, pr.endurance, pr.water, pr.team, pr.winter, pr.racquet),
mail.offer=case_when(
pr.backcountry==pr.max ~ "Backcountry",
pr.endurance==pr.max~ "Endurance",
pr.water==pr.max~ "Water",
pr.team==pr.max ~ "Team",
pr.winter==pr.max~ "Winter",
pr.racquet==pr.max ~ "Racquet"))
pent.test<- pent.test %>%
mutate(pr.max = pmax(pr.backcountry, pr.endurance, pr.water, pr.team, pr.winter, pr.racquet),
mail.offer=case_when(
pr.backcountry==pr.max ~ "Backcountry",
pr.endurance==pr.max~ "Endurance",
pr.water==pr.max~ "Water",
pr.team==pr.max ~ "Team",
pr.winter==pr.max~ "Winter",
pr.racquet==pr.max ~ "Racquet"))
pent.test%>% tabyl(mail.offer )
knitr::opts_chunk$set(echo=TRUE,      # Print all the code in all the chunks
warning=FALSE,  # Don't print warning statements
message=FALSE,  # Don't print other R output messages
comment=NA)     # Helps produce prettier output
library(gmodels)
library(modelr)
library(janitor)
library(haven)
library(readxl)
library(knitr)
library(psych)
library(statar)
library(tidyverse)
load("PentathlonTargeting.Rdata")
pent <- pent %>% mutate(age=factor(age), female=factor(female), buyer=factor(buyer))
#Now we create the training and testing split
pent.train<- pent%>% filter(training==1)
pent.test<- pent%>% filter(training==0)
# First  we create a logistic regression model for every type of offer ( endurance, backcountry, etc)
lr.backcountry <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="backcountry"))
pent.test <- pent.test %>%
mutate(pr.backcountry = predict(lr.backcountry, newdata=pent.test, type="response"))
# Endurance
lr.endurance <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="endurance"))
pent.test <- pent.test %>%
mutate(pr.endurance = predict(lr.endurance, newdata=pent.test, type="response"))
# Strength
lr.strength <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="strength"))
pent.test <- pent.test %>%
mutate(pr.endurance = predict(lr.strength, newdata=pent.test, type="response"))
#Water
lr.water <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="water"))
pent.test <- pent.test %>%
mutate(pr.water = predict(lr.water, newdata=pent.test, type="response"))
#Team
lr.team <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="team"))
pent.test <- pent.test %>%
mutate(pr.team = predict(lr.team, newdata=pent.test, type="response"))
#Winter
lr.winter <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="winter"))
pent.test <- pent.test %>%
mutate(pr.winter = predict(lr.winter, newdata=pent.test, type="response"))
#Winter
lr.racquet <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="racquet"))
pent.test <- pent.test %>%
mutate(pr.racquet = predict(lr.racquet, newdata=pent.test, type="response"))
pent.test<- pent.test %>%
mutate(pr.max = pmax(pr.backcountry, pr.endurance, pr.water, pr.team, pr.winter, pr.racquet),
mail.offer=case_when(
pr.backcountry==pr.max ~ "Backcountry",
pr.endurance==pr.max~ "Endurance",
pr.water==pr.max~ "Water",
pr.team==pr.max ~ "Team",
pr.winter==pr.max~ "Winter",
pr.racquet==pr.max ~ "Racquet"))
pent.test%>% tabyl(mail.offer )
install.packages(c("digest", "dplyr", "fs", "ggeffects", "insight", "knitr", "parsedate", "pillar", "processx", "progress", "rcmdcheck", "reprex", "rversions", "rvest", "snakecase", "tinytex", "xfun"))
knitr::opts_chunk$set(echo=TRUE,      # Print all the code in all the chunks
warning=FALSE,  # Don't print warning statements
message=FALSE,  # Don't print other R output messages
comment=NA)     # Helps produce prettier output
library(dplyr)
install.packages(dplyr)
install.packages("dplyr")
library(gmodels)
library(modelr)
library(janitor)
library(haven)
library(readxl)
library(knitr)
library(psych)
library(statar)
library(tidyverse)
knitr::opts_chunk$set(echo=TRUE,      # Print all the code in all the chunks
warning=FALSE,  # Don't print warning statements
message=FALSE,  # Don't print other R output messages
comment=NA)     # Helps produce prettier output
library(gmodels)
library(modelr)
library(janitor)
library(haven)
library(readxl)
library(knitr)
library(psych)
library(statar)
library(tidyverse)
load("PentathlonTargeting.Rdata")
pent <- pent %>% mutate(age=factor(age), female=factor(female), buyer=factor(buyer))
#Now we create the training and testing split
pent.train<- pent%>% filter(training==1)
pent.test<- pent%>% filter(training==0)
# First  we create a logistic regression model for every type of offer ( endurance, backcountry, etc)
lr.backcountry <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="backcountry"))
pent.test <- pent.test %>%
mutate(pr.backcountry = predict(lr.backcountry, newdata=pent.test, type="response"))
# Endurance
lr.endurance <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="endurance"))
pent.test <- pent.test %>%
mutate(pr.endurance = predict(lr.endurance, newdata=pent.test, type="response"))
# Strength
lr.strength <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="strength"))
pent.test <- pent.test %>%
mutate(pr.strength = predict(lr.strength, newdata=pent.test, type="response"))
#Water
lr.water <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="water"))
pent.test <- pent.test %>%
mutate(pr.water = predict(lr.water, newdata=pent.test, type="response"))
#Team
lr.team <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="team"))
pent.test <- pent.test %>%
mutate(pr.team = predict(lr.team, newdata=pent.test, type="response"))
#Winter
lr.winter <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="winter"))
pent.test <- pent.test %>%
mutate(pr.winter = predict(lr.winter, newdata=pent.test, type="response"))
#Racquet
lr.racquet <- glm(buyer ~ age + female + income + education + children+ freq_endurance+freq_strength+freq_water+freq_team+freq_backcountry+freq_winter+freq_racquet,
family=binomial, data=pent.train %>% filter(message=="racquet"))
pent.test <- pent.test %>%
mutate(pr.racquet = predict(lr.racquet, newdata=pent.test, type="response"))
pent.test<- pent.test %>%
mutate(pr.max = pmax(pr.backcountry, pr.endurance, pr.water, pr.team, pr.winter, pr.racquet,pr.strength),
mail.offer=case_when(
pr.backcountry==pr.max ~ "Backcountry",
pr.endurance==pr.max~ "Endurance",
pr.water==pr.max~ "Water",
pr.team==pr.max ~ "Team",
pr.winter==pr.max~ "Winter",
pr.racquet==pr.max ~ "Racquet",
pr.strength==pr.max~"Strength"))
pent.test%>% tabyl(mail.offer )
pent.test %>% filter(buyer==1) %>%
group_by(message) %>%
summarise(avg_os_backcountry= mean(backcountry_os),
avg_os_endurance=mean(endurance_os),
avg_os_racquet=mean(racquet_os),
avg_os_team=mean(team_os),
avg_os_water=mean(water_os),
avg_os_winter=mean(winter_os),
avg_os_strength=mean(strength_os),
avg_os_sum=avg_os_strength+avg_os_winter+avg_os_water+avg_os_team+avg_os_racquet+avg_os_backcountry+avg_os_endurance,
avg_total=mean(total_os))
#calculate bucket size for each of message. Bucket size for endurance 56.13240 / strength 56.46285 /team...
pent.test<- pent.test %>%
mutate(bucket_endurance=56.13240,
bucket_strength=56.46285,
bucket_water=65.00817,
bucket_team=60.43344,
bucket_backcountry=61.62745,
bucket_winter=57.28686,
bucket_racquet=57.58275)
pent.test <- pent.test %>%
mutate(ep.backcountry=pr.backcountry*bucket_backcountry*0.4,
ep.endurance=pr.endurance*bucket_endurance*0.4,
ep.racquet=pr.racquet*bucket_racquet*0.4,
ep.team=pr.team*bucket_team*0.4,
ep.water=pr.water*bucket_water*0.4,
ep.winter=pr.winter*bucket_winter*0.4,
ep.strength=pr.strength*bucket_strength*0.4)
pent.test<- pent.test %>%
mutate(ep.max = pmax(ep.backcountry, ep.endurance, ep.water, ep.team, ep.winter, ep.racquet,ep.strength),
mail.offer.ep=case_when(
ep.backcountry==ep.max ~ "Backcountry",
ep.endurance==ep.max~ "Endurance",
ep.water==ep.max~ "Water",
ep.team==ep.max ~ "Team",
ep.winter==ep.max~ "Winter",
ep.racquet==ep.max ~ "Racquet",
ep.strength==ep.max~"Strength"))
pent.test%>% tabyl(mail.offer.ep )
pent.test %>%
group_by(mail.offer.ep) %>%
summarise(sum_ep=sum(ep.max), num=n(),avg_ep_customer=sum_ep/num)
pent.test %>%
summarise_at(vars(ep.max),list(mean))
pent.test %>%
summarise_at(vars(ep.backcountry, ep.endurance,ep.racquet,ep.team,ep.water,ep.winter, ep.strength, ep.max),list(mean))
pent.test<- pent.test %>%
mutate(pr.random=case_when(
message=="backcountry" ~ pr.backcountry,
message=="endurance"~ pr.endurance,
message=="water"~pr.water,
message=="team"~pr.team,
message=="winter"~pr.winter,
message=="racquet"~pr.racquet,
message=="strength"~pr.strength))
pent.test <- pent.test %>%
mutate(ep.random=case_when(
message=="backcountry" ~ pr.random*bucket_backcountry*0.4,
message=="endurance"~  pr.random*bucket_endurance*0.4,
message=="water"~ pr.random*bucket_water*0.4,
message=="team"~ pr.random*bucket_team*0.4,
message=="winter"~ pr.random*bucket_winter*0.4,
message=="racquet"~ pr.random*bucket_racquet*0.4,
message=="strength"~ pr.random*bucket_strength*0.4))
pent.test %>%
summarise_at(vars(ep.random, ep.max),list(mean))
